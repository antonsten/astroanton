---
// Define the current path to handle active states
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // Remove the leading slash
---

<div class="sticky top-0 z-50 px-[20px] pt-[20px]">
  <nav class="bg-light-grey/90 backdrop-blur-sm rounded-xl">
    <div class="px-[20px] py-[8px]">
      <div class="flex items-center justify-between">
        <!-- Logo/Home link -->
        <a href="/" class="text-black">
          <span class="text-[14px] font-semibold">Anton Sten</span>
        </a>

        <!-- Main navigation -->
        <div class="hidden md:flex items-center gap-2">
          <a 
            href="/about" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'about' ? 'bg-white' : ''}`}
          >
            About
          </a>
          <a 
            href="/articles" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'articles' ? 'bg-white' : ''}`}
          >
            Articles
          </a>
          <a 
            href="/work" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'work' ? 'bg-white' : ''}`}
          >
            Work
          </a>
          <a 
            href="/coaching" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'coaching' ? 'bg-white' : ''}`}
          >
            Coaching
          </a>
          <a 
            href="/newsletter" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'newsletter' ? 'bg-white' : ''}`}
          >
            Newsletter
          </a>
        </div>

        <!-- Mobile menu button -->
        <button 
          class="md:hidden text-[14px] font-semibold text-black flex items-center gap-2"
          aria-label="Toggle menu"
          id="menuButton"
        >
          Menu
          <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M4 6H20M4 12H20M4 18H20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <!-- Mobile menu -->
      <div 
        class="hidden md:hidden pt-4 pb-6 border-t border-gray-200 mt-4"
        id="mobileMenu"
      >
        <div class="flex flex-col space-y-4">
          <a 
            href="/about" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'about' ? 'bg-white' : ''}`}
          >
            About
          </a>
          <a 
            href="/articles" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'articles' ? 'bg-white' : ''}`}
          >
            Articles
          </a>
          <a 
            href="/work" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'work' ? 'bg-white' : ''}`}
          >
            Work
          </a>
          <a 
            href="/coaching" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'coaching' ? 'bg-white' : ''}`}
          >
            Coaching
          </a>
          <a 
            href="/newsletter" 
            class={`text-[14px] font-semibold text-black hover:bg-white px-3 py-1 rounded-lg transition-colors ${currentPath === 'newsletter' ? 'bg-white' : ''}`}
          >
            Newsletter
          </a>
        </div>
      </div>
    </div>
  </nav>
</div>

<script>
  // Mobile menu toggle
  const menuButton = document.getElementById('menuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  const menuIcon = menuButton?.querySelector('svg');

  menuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
    const button = menuButton as HTMLButtonElement;
    button.textContent = button.textContent === 'Menu' ? 'Close' : 'Menu';
    
    // Rotate the menu icon
    if (menuIcon) {
      menuIcon.style.transform = button.textContent === 'Close' ? 'rotate(180deg)' : 'rotate(0deg)';
      menuIcon.style.transition = 'transform 0.3s ease';
    }
  });
</script> 