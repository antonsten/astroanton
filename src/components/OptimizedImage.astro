---
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  className?: string;
  loading?: 'lazy' | 'eager';
}

const { src, alt, width, height, className = '', loading = 'lazy' } = Astro.props;

// Get the base path without extension
const basePath = src.replace(/\.[^/.]+$/, '');
const optimizedPath = `/optimized${basePath}`;

// Generate srcset for different sizes
const sizes = [320, 640, 960, 1280];
const srcset = sizes
  .map(size => `${optimizedPath}-${size}.webp ${size}w`)
  .join(', ');

// Generate srcset for JPEG fallback
const jpegSrcset = sizes
  .map(size => `${optimizedPath}-${size}.jpeg ${size}w`)
  .join(', ');
---

<picture>
  <source
    type="image/webp"
    srcset={srcset}
    sizes="(max-width: 640px) 320px, (max-width: 960px) 640px, (max-width: 1280px) 960px, 1280px"
  />
  <source
    type="image/jpeg"
    srcset={jpegSrcset}
    sizes="(max-width: 640px) 320px, (max-width: 960px) 640px, (max-width: 1280px) 960px, 1280px"
  />
  <img
    src={`${optimizedPath}-640.jpeg`}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={loading}
  />
</picture> 