---
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  className?: string;
  loading?: 'lazy' | 'eager';
}

const { 
  src, 
  alt, 
  width = 700, 
  height, 
  className = '', 
  loading = 'lazy' 
} = Astro.props;

// Generate srcset for different sizes
const sizes = [400, 700, 1000];
const srcset = sizes
    .map(size => `${src}?width=${size} ${size}w`)
    .join(', ');

// Calculate aspect ratio if height is not provided
const aspectRatio = height ? height / width : 9/16;
const paddingBottom = `${aspectRatio * 100}%`;
---

<div class={`relative ${className}`} style={`padding-bottom: ${paddingBottom}`}>
    <img
        src={src}
        alt={alt}
        width={width}
        height={height || Math.round(width * aspectRatio)}
        srcset={srcset}
        sizes="(max-width: 640px) 100vw, 700px"
        loading={loading}
        decoding="async"
        class="absolute inset-0 w-full h-full object-cover"
    />
</div> 