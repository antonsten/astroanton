---
import Layout from './Layout.astro';
import NewsletterForm from '../components/NewsletterForm.astro';
import '../styles/global.css';

interface Props {
    frontmatter?: {
        title: string;
        description?: string;
        date: string;
        minutesToRead?: number;
    };
    title?: string;
    description?: string;
    date?: string;
    minutesToRead?: number;
}

const { 
    title = 'Untitled Post', 
    description = '',
    date = '',
    minutesToRead = 5
} = Astro.props.frontmatter || Astro.props;

// Format the date without using browser APIs
function formatDate(dateStr: string | undefined) {
    if (!dateStr) {
        console.error('No date string provided');
        return '';
    }
    try {
        const date = new Date(dateStr);
        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        return `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;
    } catch (error) {
        console.error('Error formatting date:', error);
        return '';
    }
}

const formattedDate = formatDate(date);
---

<Layout title={title} description={description}>
    <article class="max-w-[700px] mx-auto px-4">
        <!-- Article Header -->
        <header class="mb-16 mt-[20vh]">
            <h1 class="text-[32px] md:text-[50px] leading-[40px] md:leading-[56px] tracking-[-0.02em] font-medium text-black mb-4">{title}</h1>
            <div class="flex items-center gap-2 text-dark-grey text-[16px] leading-[24px] tracking-[-0.01em]">
                <time datetime={date}>{formattedDate}</time>
                <span>â€¢</span>
                <span>{minutesToRead} minute reading time</span>
            </div>
        </header>

        <!-- Article Content -->
        <div class="prose prose-lg max-w-none mb-16">
            <slot />
        </div>

        <!-- Social Sharing -->
        <div class="bg-light-grey/90 backdrop-blur-sm rounded-xl px-[20px] py-[20px] mb-16">
            <h2 class="body-xl text-black mb-6">Did you enjoy this article?</h2>
            <div class="flex flex-wrap items-center gap-2">
                <a href={`https://www.linkedin.com/feed/?shareActive=true&text=${encodeURIComponent(title + ' ' + Astro.url.toString())}`} target="_blank" rel="noopener noreferrer" class="text-[14px] text-black hover:bg-white px-3 py-1 rounded-lg transition-colors flex items-center gap-2">
                    <i class="fa-brands fa-linkedin"></i>
                    Share on LinkedIn
                </a>
                <a href={`https://bsky.app/intent/compose?text=${encodeURIComponent(title + ' ' + Astro.url.toString())}`} target="_blank" rel="noopener noreferrer" class="text-[14px] text-black hover:bg-white px-3 py-1 rounded-lg transition-colors flex items-center gap-2">
                    <i class="fa-brands fa-bluesky"></i>
                    Share on Bluesky
                </a>
                <button id="copyUrl" class="text-[14px] text-black hover:bg-white px-3 py-1 rounded-lg transition-colors flex items-center gap-2">
                    <i class="fa-regular fa-copy"></i>
                    Copy link
                </button>
            </div>
        </div>

        <!-- Newsletter Section -->
        <section class="mb-16">
            <NewsletterForm />
        </section>
    </article>
</Layout>

<!-- Add Font Awesome -->
<script src="https://kit.fontawesome.com/746b7e8cf2.js" crossorigin="anonymous"></script>

<script>
    // Add copy URL functionality
    document.getElementById('copyUrl')?.addEventListener('click', () => {
        const url = new URL(window.location.href);
        url.searchParams.set('utm_source', 'antonsten');
        url.searchParams.set('utm_medium', 'website');
        url.searchParams.set('utm_campaign', 'article_share');
        
        navigator.clipboard.writeText(url.toString());
        
        const button = document.getElementById('copyUrl');
        if (button) {
            const originalText = button.textContent;
            button.textContent = 'Copied!';
            setTimeout(() => {
                button.textContent = originalText;
            }, 2000);
        }
    });
</script>

<style is:global>
    /* Add any blog-specific global styles here */
    .prose {
        @apply text-[18px] leading-[28px] font-regular;
    }
    
    .prose p {
        @apply mb-8;
    }

    .prose h2 {
        @apply text-[26px] leading-[34px] tracking-[-0.01em] font-medium mt-24 mb-8;
    }

    .prose h3 {
        @apply text-[20px] leading-[28px] tracking-[-0.01em] font-medium mt-16 mb-6;
    }

    .prose ul {
        @apply list-disc list-outside ml-6 mb-8;
    }

    .prose ol {
        @apply list-decimal list-outside ml-6 mb-8;
    }

    .prose li {
        @apply mb-2;
    }

    .prose a {
        @apply text-black underline hover:text-green transition-colors;
    }

    .prose blockquote {
        @apply relative bg-light-grey p-8 rounded-xl mb-12 !important;
    }

    .prose blockquote::before,
    .prose blockquote::after,
    .prose blockquote > div::before,
    .prose blockquote > div::after,
    .prose blockquote p::before,
    .prose blockquote p::after {
        content: none !important;
        display: none !important;
    }

    .prose blockquote > div {
        @apply relative flex-1;
    }

    .prose blockquote > div > div {
        @apply relative;
    }

    .prose blockquote p {
        @apply text-[20px] leading-[32px] mb-4 last:mb-0 text-black relative font-regular mt-0 !important;
    }

    .prose blockquote > div > div > p:first-child {
        @apply mt-0 !important;
    }

    .prose blockquote p em {
        @apply text-[16px] leading-[32px] text-dark-grey mt-12 block not-italic font-regular;
    }

    .prose blockquote a {
        @apply text-[16px] leading-[24px] tracking-[-0.01em] font-regular text-grey no-underline mt-4 block;
    }

    .prose blockquote a:hover {
        @apply text-green;
    }

    .prose code {
        @apply bg-light-grey px-2 py-1 rounded-[4px] text-[18px] leading-[28px];
    }

    .prose pre {
        @apply bg-light-grey p-6 rounded-[12px] mb-8 overflow-x-auto;
    }

    .prose pre code {
        @apply bg-transparent p-0 text-[16px] leading-[24px];
    }

    .prose img {
        @apply rounded-[12px] mb-8;
    }

    .prose figure {
        @apply mb-8;
    }

    .prose figcaption {
        @apply text-[16px] leading-[24px] text-dark-grey text-center mt-4;
    }

    .prose iframe {
        @apply w-full aspect-video rounded-[12px] mb-8;
    }
</style> 