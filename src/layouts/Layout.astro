---
import { ViewTransitions } from 'astro:transitions';
import '../styles/global.css';
import HtmlHead from '../components/HtmlHead.astro';
import ScrollAnimation from '../components/ScrollAnimation.astro';
import Footer from '../components/Footer.astro';
import CanonicalUrl from '../components/CanonicalUrl.astro';

interface Props {
	title: string;
	description?: string;
	path?: string;
}

const { 
	title, 
	description = "Anton Sten is a UX lead and product designer helping teams build better digital products through thoughtful design, collaboration, and strategy.",
	path = ''
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<HtmlHead title={title} description={description} />
	<CanonicalUrl path={path} />
	<body class="bg-white text-black antialiased">
		<ScrollAnimation>
			<div class="fixed top-0 left-0 w-full z-50 pointer-events-none">
				<div class="max-w-[700px] mx-auto px-4">
					<h1 class="text-[32px] leading-[40px] tracking-[-0.02em] font-medium text-black opacity-0 transition-opacity duration-300" id="scroll-title">Studio Anton Sten</h1>
				</div>
			</div>
			<main class="min-h-screen">
				<slot />
			</main>
			<Footer />
		</ScrollAnimation>
	</body>
</html>

<style is:global>
	/* Add any global styles here */
	html {
		font-family: 'Suisse Intl', system-ui, sans-serif;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const mainContent = document.querySelector('main');
		const fixedNav = document.querySelector('.fixed .flex') as HTMLElement;
		const originalNav = document.querySelector('nav') as HTMLElement;
		const scrollTitle = document.getElementById('scroll-title') as HTMLElement;
		
		if (!mainContent || !fixedNav || !originalNav || !scrollTitle) return;

		const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					originalNav.style.opacity = '0';
					fixedNav.style.opacity = '1';
					scrollTitle.style.opacity = '1';
				} else {
					originalNav.style.opacity = '1';
					fixedNav.style.opacity = '0';
					scrollTitle.style.opacity = '0';
				}
			});
		}, {
			threshold: 0.5
		});

		observer.observe(mainContent);
	});
</script>
