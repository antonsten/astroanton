---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all articles from the content collection
const articles = await getCollection('articles');

// Sort articles by publish date
const sortedPosts = articles
    .map(article => ({
        ...article.data,
        url: `/articles/${article.slug}`
    }))
    .sort((a, b) => new Date(b.publishDate).getTime() - new Date(a.publishDate).getTime());
---

<Layout title="Articles | Anton Sten" description="Articles and thoughts on UX design, product strategy, and digital experiences.">
    <div class="px-5 pt-32">
        <div class="max-w-[700px] mx-auto">
            <header class="mb-16">
                <h1 class="text-[32px] md:text-[50px] leading-[40px] md:leading-[56px] tracking-[-0.02em] font-medium text-black mb-4">Articles</h1>
                <p class="text-[20px] leading-[32px] tracking-[-0.01em] text-dark-grey">
                    Thoughts on UX design, product strategy, and digital experiences.
                </p>
            </header>
            
            <div class="space-y-16">
                {sortedPosts.length === 0 ? (
                    <p class="text-[18px] leading-[28px] tracking-[-0.01em] text-dark-grey">
                        No articles found.
                    </p>
                ) : (
                    sortedPosts.map(post => {
                        const formattedDate = new Date(post.publishDate).toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                        });
                        
                        return (
                            <article class="group">
                                <a href={post.url} class="block space-y-4">
                                    <div class="space-y-2">
                                        <h2 class="text-[26px] leading-[34px] tracking-[-0.01em] font-medium text-black group-hover:text-green transition-colors">
                                            {post.title}
                                        </h2>
                                        <div class="flex items-center gap-2 text-dark-grey text-[14px] leading-[20px] tracking-[-0.01em]">
                                            <time datetime={post.publishDate}>{formattedDate}</time>
                                            {post.minutesToRead && (
                                                <>
                                                    <span>â€¢</span>
                                                    <span>{post.minutesToRead} min read</span>
                                                </>
                                            )}
                                        </div>
                                    </div>
                                </a>
                            </article>
                        );
                    })
                )}
            </div>
        </div>
    </div>
</Layout> 